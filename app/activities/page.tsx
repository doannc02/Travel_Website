"use client"
import { useState } from 'react';
import { MotionDiv, MotionH2, MotionP, MotionButton } from '../components/common/MotionWrapper';

// Mock activities data
const mockActivities = [
  {
    id: 1,
    title: "L·∫∑n ng·∫Øm san h√¥ Ph√∫ Qu·ªëc",
    subtitle: "Kh√°m ph√° th·∫ø gi·ªõi d∆∞·ªõi ƒë√°y bi·ªÉn v·ªõi h∆∞·ªõng d·∫´n vi√™n chuy√™n nghi·ªáp",
    image: "https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b?w=800&h=600&fit=crop",
    category: "Th·ªÉ thao bi·ªÉn",
    location: "Ph√∫ Qu·ªëc, Ki√™n Giang",
    duration: "3-4 gi·ªù",
    groupSize: "2-8 ng∆∞·ªùi",
    price: 850000,
    originalPrice: 1200000,
    discount: "29%",
    rating: 4.8,
    reviewCount: 567,
    difficulty: "Trung b√¨nh",
    ageRequirement: "12+",
    included: ["Thi·∫øt b·ªã l·∫∑n", "H∆∞·ªõng d·∫´n vi√™n", "B·∫£o hi·ªÉm", "·∫¢nh d∆∞·ªõi n∆∞·ªõc"],
    highlights: [
      "L·∫∑n t·∫°i 3 ƒëi·ªÉm san h√¥ ƒë·∫πp nh·∫•t",
      "H∆∞·ªõng d·∫´n vi√™n PADI certified",
      "Thi·∫øt b·ªã ch·∫•t l∆∞·ª£ng cao",
      "·∫¢nh k·ª∑ ni·ªám mi·ªÖn ph√≠"
    ],
    schedule: "08:00 - 12:00 h√†ng ng√†y",
    bestTime: "Th√°ng 11 - Th√°ng 4"
  },
  {
    id: 2,
    title: "Leo n√∫i Fansipan - N√≥c nh√† ƒê√¥ng D∆∞∆°ng",
    subtitle: "Chinh ph·ª•c ƒë·ªânh n√∫i cao nh·∫•t Vi·ªát Nam v·ªõi view tuy·ªát ƒë·∫πp",
    image: "https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b?w=800&h=600&fit=crop",
    category: "Leo n√∫i",
    location: "Sapa, L√†o Cai",
    duration: "2 ng√†y 1 ƒë√™m",
    groupSize: "4-12 ng∆∞·ªùi",
    price: 1800000,
    originalPrice: 2500000,
    discount: "28%",
    rating: 4.9,
    reviewCount: 892,
    difficulty: "Kh√≥",
    ageRequirement: "16+",
    included: ["H∆∞·ªõng d·∫´n vi√™n", "Thi·∫øt b·ªã leo n√∫i", "ƒÇn u·ªëng", "Homestay", "B·∫£o hi·ªÉm"],
    highlights: [
      "Leo n√∫i Fansipan 3.143m",
      "Ng·∫Øm b√¨nh minh tr√™n ƒë·ªânh n√∫i",
      "Kh√°m ph√° vƒÉn h√≥a d√¢n t·ªôc",
      "View ru·ªông b·∫≠c thang tuy·ªát ƒë·∫πp"
    ],
    schedule: "Th·ª© 7 - Ch·ªß nh·∫≠t h√†ng tu·∫ßn",
    bestTime: "Th√°ng 9 - Th√°ng 11"
  },
  {
    id: 3,
    title: "Kh√°m ph√° ph·ªë c·ªï H·ªôi An v·ªÅ ƒë√™m",
    subtitle: "Tr·∫£i nghi·ªám vƒÉn h√≥a truy·ªÅn th·ªëng v·ªõi ƒë√®n l·ªìng v√† ·∫©m th·ª±c ƒë·ªãa ph∆∞∆°ng",
    image: "https://images.unsplash.com/photo-1436491865332-7a61a109cc05?w=800&h=600&fit=crop",
    category: "VƒÉn h√≥a",
    location: "H·ªôi An, Qu·∫£ng Nam",
    duration: "4-5 gi·ªù",
    groupSize: "2-15 ng∆∞·ªùi",
    price: 450000,
    originalPrice: 650000,
    discount: "31%",
    rating: 4.7,
    reviewCount: 1234,
    difficulty: "D·ªÖ",
    ageRequirement: "M·ªçi l·ª©a tu·ªïi",
    included: ["H∆∞·ªõng d·∫´n vi√™n", "V√© tham quan", "Th·∫£ ƒë√®n hoa ƒëƒÉng", "ƒÇn t·ªëi ƒë·ªãa ph∆∞∆°ng"],
    highlights: [
      "Tham quan ph·ªë c·ªï v·ªÅ ƒë√™m",
      "Th·∫£ ƒë√®n hoa ƒëƒÉng s√¥ng Ho√†i",
      "Th∆∞·ªüng th·ª©c ·∫©m th·ª±c ƒë·ªãa ph∆∞∆°ng",
      "Ch·ª•p ·∫£nh v·ªõi trang ph·ª•c truy·ªÅn th·ªëng"
    ],
    schedule: "18:00 - 22:00 h√†ng ng√†y",
    bestTime: "Th√°ng 2 - Th√°ng 8"
  },
  {
    id: 4,
    title: "Ch√®o thuy·ªÅn kayak v·ªãnh H·∫° Long",
    subtitle: "Kh√°m ph√° v·ªãnh H·∫° Long t·ª´ g√≥c nh√¨n m·ªõi v·ªõi thuy·ªÅn kayak",
    image: "https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b?w=800&h=600&fit=crop",
    category: "Th·ªÉ thao bi·ªÉn",
    location: "V·ªãnh H·∫° Long, Qu·∫£ng Ninh",
    duration: "6-8 gi·ªù",
    groupSize: "2-10 ng∆∞·ªùi",
    price: 1200000,
    originalPrice: 1800000,
    discount: "33%",
    rating: 4.6,
    reviewCount: 456,
    difficulty: "Trung b√¨nh",
    ageRequirement: "14+",
    included: ["Thuy·ªÅn kayak", "H∆∞·ªõng d·∫´n vi√™n", "ƒÇn tr∆∞a", "B·∫£o hi·ªÉm", "V·∫≠n chuy·ªÉn"],
    highlights: [
      "Ch√®o thuy·ªÅn qua hang ƒë·ªông",
      "Kh√°m ph√° v·ªãnh trong l√†ng",
      "T·∫Øm bi·ªÉn t·∫°i b√£i bi·ªÉn hoang s∆°",
      "Ng·∫Øm ho√†ng h√¥n tr√™n v·ªãnh"
    ],
    schedule: "08:00 - 16:00 h√†ng ng√†y",
    bestTime: "Th√°ng 3 - Th√°ng 11"
  }
];

export default function ActivitiesPage() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedLocation, setSelectedLocation] = useState('all');
  const [priceRange, setPriceRange] = useState('all');

  const categories = ['all', 'Th·ªÉ thao bi·ªÉn', 'Leo n√∫i', 'VƒÉn h√≥a', 'Kh√°m ph√°', '·∫®m th·ª±c'];
  const locations = ['all', 'Ph√∫ Qu·ªëc', 'Sapa', 'H·ªôi An', 'V·ªãnh H·∫° Long', 'Nha Trang', 'ƒê√† N·∫µng'];
  const priceRanges = [
    { value: 'all', label: 'T·∫•t c·∫£ gi√°' },
    { value: 'budget', label: 'D∆∞·ªõi 500k' },
    { value: 'mid', label: '500k - 1.5M' },
    { value: 'high', label: '1.5M - 3M' },
    { value: 'luxury', label: 'Tr√™n 3M' }
  ];

  const filteredActivities = mockActivities.filter(activity => {
    if (selectedCategory !== 'all' && activity.category !== selectedCategory) return false;
    if (selectedLocation !== 'all' && !activity.location.includes(selectedLocation)) return false;
    if (priceRange !== 'all') {
      const price = activity.price;
      switch (priceRange) {
        case 'budget': return price < 500000;
        case 'mid': return price >= 500000 && price <= 1500000;
        case 'high': return price > 1500000 && price <= 3000000;
        case 'luxury': return price > 3000000;
        default: return true;
      }
    }
    return true;
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-white to-red-50">
      {/* Hero Section */}
      <section className="relative py-20 bg-gradient-to-r from-orange-600 to-red-600 text-white">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-4xl lg:text-6xl font-bold mb-6">
            Ho·∫°t ƒë·ªông & Gi·∫£i tr√≠
          </h1>
          <MotionP
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.1 }}
            className="text-xl lg:text-2xl text-orange-100 max-w-3xl mx-auto"
          >
            Kh√°m ph√° nh·ªØng ho·∫°t ƒë·ªông th√∫ v·ªã v√† tr·∫£i nghi·ªám ƒë·ªôc ƒë√°o t·∫°i c√°c ƒëi·ªÉm ƒë·∫øn tuy·ªát v·ªùi
          </MotionP>
        </div>
      </section>

      {/* Filters Section */}
      <section className="py-8 bg-white shadow-lg -mt-8 relative z-10">
        <div className="container mx-auto px-4">
          <div className="bg-white rounded-2xl shadow-xl p-6 lg:p-8">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              {/* Category Filter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Danh m·ª•c</label>
                <select
                  value={selectedCategory}
                  onChange={(e) => setSelectedCategory(e.target.value)}
                  className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                >
                  {categories.map(category => (
                    <option key={category} value={category}>
                      {category === 'all' ? 'T·∫•t c·∫£ danh m·ª•c' : category}
                    </option>
                  ))}
                </select>
              </div>

              {/* Location Filter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ƒê·ªãa ƒëi·ªÉm</label>
                <select
                  value={selectedLocation}
                  onChange={(e) => setSelectedLocation(e.target.value)}
                  className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                >
                  {locations.map(location => (
                    <option key={location} value={location}>
                      {location === 'all' ? 'T·∫•t c·∫£ ƒë·ªãa ƒëi·ªÉm' : location}
                    </option>
                  ))}
                </select>
              </div>

              {/* Price Range Filter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Kho·∫£ng gi√°</label>
                <select
                  value={priceRange}
                  onChange={(e) => setPriceRange(e.target.value)}
                  className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent"
                >
                  {priceRanges.map(range => (
                    <option key={range.value} value={range.value}>
                      {range.label}
                    </option>
                  ))}
                </select>
              </div>

              {/* Search Button */}
              <div className="flex items-end">
                <MotionButton
                  className="w-full bg-gradient-to-r from-orange-600 to-red-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-orange-700 hover:to-red-700 transition-all duration-300"
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                >
                  üîç T√¨m ki·∫øm
                </MotionButton>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Activities Grid */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <MotionH2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
            className="text-3xl font-bold text-gray-900 mb-12 text-center"
          >
            {filteredActivities.length} ho·∫°t ƒë·ªông ƒë∆∞·ª£c t√¨m th·∫•y
          </MotionH2>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {filteredActivities.map((activity, index) => (
              <MotionDiv
                key={activity.id}
                initial={{ opacity: 0, y: 40 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.7, delay: index * 0.1 }}
                className="bg-white rounded-3xl shadow-xl hover:shadow-2xl transition-all duration-500 overflow-hidden border border-gray-100 hover:border-orange-200 transform hover:-translate-y-2"
              >
                {/* Activity Image */}
                <div className="relative h-64 overflow-hidden">
                  <img 
                    src={activity.image} 
                    alt={activity.title}
                    className="w-full h-full object-cover hover:scale-110 transition-transform duration-700"
                  />
                  <div className="absolute top-4 left-4 bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                    {activity.category}
                  </div>
                  <div className="absolute top-4 right-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                    {activity.discount}
                  </div>
                  <div className="absolute bottom-4 left-4 bg-white/90 backdrop-blur-sm px-3 py-2 rounded-lg">
                    <div className="flex items-center space-x-1">
                      <span className="text-yellow-400">‚≠ê</span>
                      <span className="font-bold text-gray-900">{activity.rating}</span>
                      <span className="text-gray-600 text-sm">({activity.reviewCount.toLocaleString()})</span>
                    </div>
                  </div>
                </div>

                {/* Activity Info */}
                <div className="p-6">
                  <h3 className="text-xl font-bold text-gray-900 mb-2">
                    {activity.title}
                  </h3>
                  <p className="text-gray-600 mb-4">
                    {activity.subtitle}
                  </p>

                  {/* Quick Info Grid */}
                  <div className="grid grid-cols-2 gap-4 mb-6">
                    <div className="bg-orange-50 p-3 rounded-xl">
                      <div className="text-orange-600 text-sm font-medium mb-1">Th·ªùi gian</div>
                      <div className="text-gray-800 font-semibold">{activity.duration}</div>
                    </div>
                    <div className="bg-red-50 p-3 rounded-xl">
                      <div className="text-red-600 text-sm font-medium mb-1">Nh√≥m</div>
                      <div className="text-gray-800 font-semibold">{activity.groupSize}</div>
                    </div>
                  </div>

                  {/* Location & Schedule */}
                  <div className="mb-6">
                    <div className="flex items-center space-x-4 text-sm text-gray-600 mb-3">
                      <span className="flex items-center">
                        <span className="text-orange-500 mr-2">üìç</span>
                        {activity.location}
                      </span>
                      <span className="flex items-center">
                        <span className="text-red-500 mr-2">üïí</span>
                        {activity.schedule}
                      </span>
                    </div>
                    <div className="flex items-center space-x-4 text-sm text-gray-600">
                      <span className="flex items-center">
                        <span className="text-blue-500 mr-2">‚ö°</span>
                        ƒê·ªô kh√≥: {activity.difficulty}
                      </span>
                      <span className="flex items-center">
                        <span className="text-green-500 mr-2">üë•</span>
                        {activity.ageRequirement}
                      </span>
                    </div>
                  </div>

                  {/* Price */}
                  <div className="mb-6">
                    <div className="flex items-center space-x-3 mb-2">
                      <span className="text-3xl font-bold text-red-600">
                        {activity.price.toLocaleString()}ƒë
                      </span>
                      <span className="text-lg text-gray-500 line-through">
                        {activity.originalPrice.toLocaleString()}ƒë
                      </span>
                    </div>
                    <span className="text-sm text-gray-600">/ng∆∞·ªùi</span>
                  </div>

                  {/* Highlights */}
                  <div className="mb-6">
                    <h4 className="font-semibold text-gray-900 mb-3">ƒêi·ªÉm n·ªïi b·∫≠t</h4>
                    <div className="grid grid-cols-1 gap-2">
                      {activity.highlights.map((highlight, idx) => (
                        <div key={idx} className="flex items-center space-x-2 text-sm text-gray-600">
                          <span className="text-orange-500">‚úì</span>
                          <span>{highlight}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* CTA Buttons */}
                  <div className="flex space-x-3">
                    <MotionButton
                      className="flex-1 bg-gradient-to-r from-orange-600 to-red-600 text-white py-3 px-6 rounded-xl font-semibold hover:from-orange-700 hover:to-red-700 transition-all duration-300"
                      whileHover={{ y: -2 }}
                      whileTap={{ scale: 0.98 }}
                    >
                      ƒê·∫∑t ngay
                    </MotionButton>
                    <MotionButton
                      className="px-6 py-3 border-2 border-orange-600 text-orange-600 rounded-xl font-semibold hover:bg-orange-600 hover:text-white transition-all duration-300"
                      whileHover={{ y: -2 }}
                      whileTap={{ scale: 0.98 }}
                    >
                      Chi ti·∫øt
                    </MotionButton>
                  </div>
                </div>
              </MotionDiv>
            ))}
          </div>

          {/* No Results */}
          {filteredActivities.length === 0 && (
            <MotionDiv
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              className="text-center py-16"
            >
              <div className="text-6xl mb-4">üéØ</div>
              <h3 className="text-2xl font-bold text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y ho·∫°t ƒë·ªông</h3>
              <p className="text-gray-600 mb-6">H√£y th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ƒë·ªÉ t√¨m ki·∫øm ho·∫°t ƒë·ªông ph√π h·ª£p</p>
              <MotionButton
                onClick={() => {
                  setSelectedCategory('all');
                  setSelectedLocation('all');
                  setPriceRange('all');
                }}
                className="bg-orange-600 text-white px-8 py-3 rounded-xl font-semibold hover:bg-orange-700 transition-colors"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.98 }}
              >
                X√≥a b·ªô l·ªçc
              </MotionButton>
            </MotionDiv>
          )}
        </div>
      </section>
    </div>
  );
} 