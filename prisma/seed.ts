import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting database seeding...')

  // ================== DESTINATIONS ==================
  const destinations = await prisma.destination.createMany({
    data: [
      {
        city: 'Ph√∫ Qu·ªëc',
        country: 'Vi·ªát Nam',
        province: 'Ki√™n Giang',
        description: 'ƒê·∫£o ng·ªçc Ph√∫ Qu·ªëc - thi√™n ƒë∆∞·ªùng du l·ªãch v·ªõi nh·ªØng b√£i bi·ªÉn ƒë·∫πp, h·∫£i s·∫£n t∆∞∆°i ngon.',
        image: 'https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b?w=1200&h=600&fit=crop',
        rating: 4.8,
        reviewCount: 15420,
        hotels: 156,
        fromPrice: 1200000,
        toPrice: 8000000,
        bestTime: 'Th√°ng 11 - Th√°ng 4',
        category: 'Bi·ªÉn ƒë·∫£o',
        popularity: 'R·∫•t cao',
        slug: 'phu-quoc',
        temperature: '25-32¬∞C',
        condition: 'N·∫Øng ƒë·∫πp, √≠t m∆∞a',
        humidity: '70-85%',
        rainfall: 'Th·∫•p',
        flightTime: '45 ph√∫t t·ª´ TP.HCM',
        ferryTime: '2.5 gi·ªù t·ª´ R·∫°ch Gi√°',
        carTime: 'Kh√¥ng th·ªÉ ƒëi xe'
      },
      {
        city: 'ƒê√† N·∫µng',
        country: 'Vi·ªát Nam',
        province: 'ƒê√† N·∫µng',
        description: 'Th√†nh ph·ªë ƒë√°ng s·ªëng nh·∫•t Vi·ªát Nam v·ªõi b√£i bi·ªÉn M·ªπ Kh√™ tuy·ªát ƒë·∫πp.',
        image: 'https://images.unsplash.com/photo-1436491865332-7a61a109cc05?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1436491865332-7a61a109cc05?w=1200&h=600&fit=crop',
        rating: 4.7,
        reviewCount: 12890,
        hotels: 234,
        fromPrice: 800000,
        toPrice: 6000000,
        bestTime: 'Th√°ng 2 - Th√°ng 8',
        category: 'Bi·ªÉn',
        popularity: 'Cao',
        slug: 'da-nang',
        temperature: '22-35¬∞C',
        condition: 'N·∫Øng ƒë·∫πp, m∆∞a v·ª´a',
        humidity: '65-80%',
        rainfall: 'Trung b√¨nh',
        flightTime: '1 gi·ªù t·ª´ H√† N·ªôi',
        ferryTime: '2.5 gi·ªù t·ª´ Hu·∫ø',
        carTime: '3 gi·ªù t·ª´ Hu·∫ø'
      },
      {
        city: 'Nha Trang',
        country: 'Vi·ªát Nam',
        province: 'Kh√°nh H√≤a',
        description: 'Th√†nh ph·ªë bi·ªÉn xinh ƒë·∫πp v·ªõi nhi·ªÅu h√≤n ƒë·∫£o hoang s∆°.',
        image: 'https://images.unsplash.com/photo-1526481280691-19585f32e7f7?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1526481280691-19585f32e7f7?w=1200&h=600&fit=crop',
        rating: 4.6,
        reviewCount: 9876,
        hotels: 189,
        fromPrice: 600000,
        toPrice: 4500000,
        bestTime: 'Th√°ng 1 - Th√°ng 8',
        category: 'Bi·ªÉn',
        popularity: 'Cao',
        slug: 'nha-trang',
        temperature: '24-33¬∞C',
        condition: 'N·∫Øng ƒë·∫πp, m∆∞a √≠t',
        humidity: '70-85%',
        rainfall: 'Th·∫•p',
        flightTime: '45 ph√∫t t·ª´ TP.HCM',
        ferryTime: '1 gi·ªù t·ª´ Nha Trang',
        carTime: '6 gi·ªù t·ª´ TP.HCM'
      },
      {
        city: 'Sapa',
        country: 'Vi·ªát Nam',
        province: 'L√†o Cai',
        description: 'Th·ªã tr·∫•n mi·ªÅn n√∫i cao v·ªõi ru·ªông b·∫≠c thang tuy·ªát ƒë·∫πp.',
        image: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?w=1200&h=600&fit=crop',
        rating: 4.9,
        reviewCount: 11234,
        hotels: 145,
        fromPrice: 500000,
        toPrice: 3500000,
        bestTime: 'Th√°ng 9 - Th√°ng 11',
        category: 'N√∫i',
        popularity: 'R·∫•t cao',
        slug: 'sapa',
        temperature: '15-25¬∞C',
        condition: 'M√°t m·∫ª, s∆∞∆°ng m√π',
        humidity: '80-90%',
        rainfall: 'Trung b√¨nh',
        flightTime: 'Kh√¥ng c√≥ s√¢n bay',
        ferryTime: 'Kh√¥ng c√≥ ph√†',
        carTime: '6 gi·ªù t·ª´ H√† N·ªôi'
      },
      {
        city: 'H√† N·ªôi',
        country: 'Vi·ªát Nam',
        province: 'H√† N·ªôi',
        description: 'Th·ªß ƒë√¥ ngh√¨n nƒÉm vƒÉn hi·∫øn v·ªõi H·ªì G∆∞∆°m, ph·ªë c·ªï, ·∫©m th·ª±c ƒë·∫∑c s·∫Øc.',
        image: 'https://images.unsplash.com/photo-1504754524776-8f4f37790ca0?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1504754524776-8f4f37790ca0?w=1200&h=600&fit=crop',
        rating: 4.7,
        reviewCount: 20000,
        hotels: 350,
        fromPrice: 700000,
        toPrice: 7000000,
        bestTime: 'Th√°ng 9 - Th√°ng 4',
        category: 'Th√†nh ph·ªë',
        popularity: 'R·∫•t cao',
        slug: 'ha-noi',
        temperature: '15-33¬∞C',
        condition: 'N·∫Øng, m∆∞a theo m√πa',
        humidity: '70-90%',
        rainfall: 'Trung b√¨nh',
        flightTime: 'C√≥ s√¢n bay qu·ªëc t·∫ø N·ªôi B√†i',
        ferryTime: 'Kh√¥ng c√≥',
        carTime: 'N/A'
      },
      {
        city: 'H·ªôi An',
        country: 'Vi·ªát Nam',
        province: 'Qu·∫£ng Nam',
        description: 'Ph·ªë c·ªï UNESCO v·ªõi ƒë√®n l·ªìng, ch√πa C·∫ßu, ·∫©m th·ª±c ƒë∆∞·ªùng ph·ªë.',
        image: 'https://images.unsplash.com/photo-1549887534-3db1bd59dcca?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1549887534-3db1bd59dcca?w=1200&h=600&fit=crop',
        rating: 4.8,
        reviewCount: 15000,
        hotels: 200,
        fromPrice: 500000,
        toPrice: 4000000,
        bestTime: 'Th√°ng 2 - Th√°ng 9',
        category: 'Di s·∫£n',
        popularity: 'R·∫•t cao',
        slug: 'hoi-an',
        temperature: '20-34¬∞C',
        condition: 'Kh√≠ h·∫≠u √¥n h√≤a',
        humidity: '70-85%',
        rainfall: 'Trung b√¨nh',
        flightTime: '30 ph√∫t t·ª´ s√¢n bay ƒê√† N·∫µng',
        ferryTime: 'Kh√¥ng c√≥',
        carTime: '30 ph√∫t t·ª´ ƒê√† N·∫µng'
      },
      {
        city: 'H·∫° Long',
        country: 'Vi·ªát Nam',
        province: 'Qu·∫£ng Ninh',
        description: 'K·ª≥ quan thi√™n nhi√™n th·∫ø gi·ªõi - v·ªãnh H·∫° Long.',
        image: 'https://images.unsplash.com/photo-1589391886645-d51941c10f6c?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1589391886645-d51941c10f6c?w=1200&h=600&fit=crop',
        rating: 4.9,
        reviewCount: 17000,
        hotels: 220,
        fromPrice: 1000000,
        toPrice: 6000000,
        bestTime: 'Th√°ng 3 - Th√°ng 6',
        category: 'Bi·ªÉn',
        popularity: 'R·∫•t cao',
        slug: 'ha-long',
        temperature: '22-33¬∞C',
        condition: 'N·∫Øng, c√≥ m∆∞a',
        humidity: '70-85%',
        rainfall: 'Trung b√¨nh',
        flightTime: '1 gi·ªù t·ª´ H√† N·ªôi',
        ferryTime: 'C√≥ t√†u du l·ªãch',
        carTime: '2.5 gi·ªù t·ª´ H√† N·ªôi'
      },
      {
        city: 'ƒê√† L·∫°t',
        country: 'Vi·ªát Nam',
        province: 'L√¢m ƒê·ªìng',
        description: 'Th√†nh ph·ªë ng√†n hoa v·ªõi kh√≠ h·∫≠u m√°t m·∫ª quanh nƒÉm.',
        image: 'https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?w=1200&h=600&fit=crop',
        rating: 4.8,
        reviewCount: 14000,
        hotels: 180,
        fromPrice: 600000,
        toPrice: 5000000,
        bestTime: 'Quanh nƒÉm',
        category: 'N√∫i',
        popularity: 'R·∫•t cao',
        slug: 'da-lat',
        temperature: '15-25¬∞C',
        condition: 'M√°t, s∆∞∆°ng m√π',
        humidity: '70-85%',
        rainfall: 'Trung b√¨nh',
        flightTime: '1 gi·ªù t·ª´ TP.HCM',
        ferryTime: 'Kh√¥ng c√≥',
        carTime: '7 gi·ªù t·ª´ TP.HCM'
      },
      {
        city: 'Hu·∫ø',
        country: 'Vi·ªát Nam',
        province: 'Th·ª´a Thi√™n - Hu·∫ø',
        description: 'C·ªë ƒë√¥ Hu·∫ø v·ªõi ƒê·∫°i N·ªôi, ch√πa Thi√™n M·ª•, lƒÉng t·∫©m tri·ªÅu Nguy·ªÖn.',
        image: 'https://images.unsplash.com/photo-1622034683782-6e79fba399a7?w=800&h=600&fit=crop',
        heroImage: 'https://images.unsplash.com/photo-1622034683782-6e79fba399a7?w=1200&h=600&fit=crop',
        rating: 4.7,
        reviewCount: 10000,
        hotels: 160,
        fromPrice: 500000,
        toPrice: 4000000,
        bestTime: 'Th√°ng 1 - Th√°ng 8',
        category: 'VƒÉn h√≥a',
        popularity: 'Cao',
        slug: 'hue',
        temperature: '20-35¬∞C',
        condition: 'N·∫Øng n√≥ng, c√≥ m∆∞a',
        humidity: '70-90%',
        rainfall: 'Cao',
        flightTime: '1 gi·ªù t·ª´ H√† N·ªôi',
        ferryTime: 'Kh√¥ng c√≥',
        carTime: '2 gi·ªù t·ª´ ƒê√† N·∫µng'
      }
    ]
  })

  const allDestinations = await prisma.destination.findMany()

  // ================== HOTELS ==================
  for (const dest of allDestinations) {
    await prisma.hotel.createMany({
      data: [
        {
          name: `Hotel Luxury ${dest.city}`,
          image: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=800&h=600&fit=crop',
          location: `${dest.city}, ${dest.province}`,
          rating: 4.5,
          reviewCount: 1000,
          price: 2500000,
          originalPrice: 4000000,
          discount: '35%',
          description: `Kh√°ch s·∫°n sang tr·ªçng t·∫°i ${dest.city}`,
          destinationId: dest.id
        },
        {
          name: `Resort Paradise ${dest.city}`,
          image: 'https://images.unsplash.com/photo-1501117716987-c8e86b5356df?w=800&h=600&fit=crop',
          location: `${dest.city}, ${dest.province}`,
          rating: 4.7,
          reviewCount: 1500,
          price: 3200000,
          originalPrice: 5000000,
          discount: '30%',
          description: `Resort cao c·∫•p view ƒë·∫πp t·∫°i ${dest.city}`,
          destinationId: dest.id
        }
      ]
    })
  }

  // ================== FLIGHTS ==================
  await prisma.flight.createMany({
    data: [
      {
        airline: 'Vietnam Airlines',
        flightNumber: 'VN123',
        departure: 'H√† N·ªôi (HAN)',
        arrival: 'TP.HCM (SGN)',
        departureTime: '08:00',
        arrivalTime: '10:15',
        duration: '2h 15m',
        price: 1200000,
        originalPrice: 1800000,
        discount: '33%',
        stops: 'Bay th·∫≥ng',
        aircraft: 'Airbus A350',
        class: 'Economy',
        availableSeats: 45,
        departureDate: '2025-09-01'
      },
      {
        airline: 'VietJet Air',
        flightNumber: 'VJ456',
        departure: 'H√† N·ªôi (HAN)',
        arrival: 'ƒê√† N·∫µng (DAD)',
        departureTime: '14:30',
        arrivalTime: '15:45',
        duration: '1h 15m',
        price: 599000,
        originalPrice: 1200000,
        discount: '50%',
        stops: 'Bay th·∫≥ng',
        aircraft: 'Airbus A320',
        class: 'Economy',
        availableSeats: 23,
        departureDate: '2025-09-05'
      },
      {
        airline: 'Bamboo Airways',
        flightNumber: 'QH789',
        departure: 'TP.HCM (SGN)',
        arrival: 'Ph√∫ Qu·ªëc (PQC)',
        departureTime: '09:00',
        arrivalTime: '10:00',
        duration: '1h',
        price: 800000,
        originalPrice: 1200000,
        discount: '33%',
        stops: 'Bay th·∫≥ng',
        aircraft: 'Embraer 190',
        class: 'Economy',
        availableSeats: 30,
        departureDate: '2025-09-10'
      },
      {
        airline: 'Vietnam Airlines',
        flightNumber: 'VN101',
        departure: 'ƒê√† N·∫µng (DAD)',
        arrival: 'ƒê√† L·∫°t (DLI)',
        departureTime: '07:30',
        arrivalTime: '09:00',
        duration: '1h30m',
        price: 1200000,
        originalPrice: 1600000,
        discount: '25%',
        stops: 'Bay th·∫≥ng',
        aircraft: 'ATR72',
        class: 'Economy',
        availableSeats: 20,
        departureDate: '2025-09-12'
      }
    ]
  })

  // ================== TOUR PACKAGES ==================
  for (const dest of allDestinations.slice(0, 10)) {
    const package1 = await prisma.tourPackage.create({
      data: {
        title: `Combo ${dest.city} 3N2ƒê`,
        subtitle: `Kh√°m ph√° ${dest.city} v·ªõi kh√°ch s·∫°n + v√© m√°y bay + tour`,
        description: `H√†nh tr√¨nh kh√°m ph√° ${dest.city} ƒë·∫ßy th√∫ v·ªã v·ªõi nh·ªØng tr·∫£i nghi·ªám ƒë·ªôc ƒë√°o. T·ª´ c·∫£nh s·∫Øc thi√™n nhi√™n h√πng vƒ© ƒë·∫øn vƒÉn h√≥a b·∫£n ƒë·ªãa ƒë·∫∑c s·∫Øc, tour n√†y s·∫Ω mang ƒë·∫øn cho b·∫°n nh·ªØng k·ª∑ ni·ªám kh√≥ qu√™n.`,
        image: 'https://images.unsplash.com/photo-1493558103817-58b2924bce98?w=1200&h=800&fit=crop',
        badge: 'HOT',
        discount: 'Gi·∫£m 30%',
        originalPrice: 4000000,
        price: 2800000,
        duration: '3 ng√†y 2 ƒë√™m',
        groupSize: '2-10 ng∆∞·ªùi',
        departure: 'H√† N·ªôi',
        destinationId: dest.id,
        rating: 4.7,
        reviewCount: 200,
        validUntil: '2025-12-31',
        category: 'Combo'
      }
    })

    // Create highlights
    await prisma.packageHighlight.createMany({
      data: [
        { packageId: package1.id, description: 'Kh√°m ph√° nh·ªØng ƒëi·ªÉm ƒë·∫øn n·ªïi ti·∫øng nh·∫•t' },
        { packageId: package1.id, description: 'Th∆∞·ªüng th·ª©c ·∫©m th·ª±c ƒë·ªãa ph∆∞∆°ng ƒë·∫∑c s·∫Øc' },
        { packageId: package1.id, description: 'Tr·∫£i nghi·ªám vƒÉn h√≥a b·∫£n ƒë·ªãa ch√¢n th·ª±c' },
        { packageId: package1.id, description: 'Ngh·ªâ ng∆°i t·∫°i kh√°ch s·∫°n ch·∫•t l∆∞·ª£ng cao' },
        { packageId: package1.id, description: 'H∆∞·ªõng d·∫´n vi√™n chuy√™n nghi·ªáp, nhi·ªát t√¨nh' }
      ]
    })

    // Create itinerary
    await prisma.packageItinerary.createMany({
      data: [
        { 
          packageId: package1.id, 
          day: '1', 
          content: 'Kh·ªüi h√†nh t·ª´ H√† N·ªôi ‚Üí ƒê·∫øn ƒëi·ªÉm ƒë·∫øn ‚Üí Check-in kh√°ch s·∫°n ‚Üí ƒÇn t·ªëi ‚Üí Ngh·ªâ ƒë√™m',
          startTime: '07:00',
          transport: 'Xe √¥ t√¥',
          meals: 'ƒÇn t·ªëi'
        },
        { 
          packageId: package1.id, 
          day: '2', 
          content: 'ƒÇn s√°ng ‚Üí Tham quan c√°c ƒëi·ªÉm du l·ªãch ch√≠nh ‚Üí ƒÇn tr∆∞a ‚Üí Ti·∫øp t·ª•c kh√°m ph√° ‚Üí ƒÇn t·ªëi',
          startTime: '08:00',
          transport: 'Xe √¥ t√¥ + ƒêi b·ªô',
          meals: 'ƒÇn s√°ng, tr∆∞a, t·ªëi'
        },
        { 
          packageId: package1.id, 
          day: '3', 
          content: 'ƒÇn s√°ng ‚Üí Mua s·∫Øm ‚Üí ƒÇn tr∆∞a ‚Üí Kh·ªüi h√†nh v·ªÅ H√† N·ªôi',
          startTime: '07:30',
          transport: 'Xe √¥ t√¥',
          meals: 'ƒÇn s√°ng, tr∆∞a'
        }
      ]
    })

    // Create included/not included
    await prisma.packageIncluded.createMany({
      data: [
        { packageId: package1.id, item: 'V√© m√°y bay kh·ª© h·ªìi' },
        { packageId: package1.id, item: 'Kh√°ch s·∫°n 3-4 sao' },
        { packageId: package1.id, item: 'ƒÇn u·ªëng theo ch∆∞∆°ng tr√¨nh' },
        { packageId: package1.id, item: 'Xe ƒë∆∞a ƒë√≥n' },
        { packageId: package1.id, item: 'H∆∞·ªõng d·∫´n vi√™n' },
        { packageId: package1.id, item: 'B·∫£o hi·ªÉm du l·ªãch' }
      ]
    })

    await prisma.packageNotIncluded.createMany({
      data: [
        { packageId: package1.id, item: 'Chi ph√≠ c√° nh√¢n' },
        { packageId: package1.id, item: 'ƒê·ªì u·ªëng' },
        { packageId: package1.id, item: 'Ti·ªÅn tip' },
        { packageId: package1.id, item: 'V√© tham quan ngo√†i ch∆∞∆°ng tr√¨nh' }
      ]
    })

    // Create sections for rich content
    await prisma.tourPackageSection.createMany({
      data: [
        {
          packageId: package1.id,
          title: 'VƒÉn h√≥a & ·∫®m th·ª±c',
          content: `Kh√°m ph√° vƒÉn h√≥a ƒë·ªôc ƒë√°o c·ªßa ${dest.city} v·ªõi nh·ªØng phong t·ª•c t·∫≠p qu√°n truy·ªÅn th·ªëng. Th∆∞·ªüng th·ª©c c√°c m√≥n ƒÉn ƒë·∫∑c s·∫£n ƒë·ªãa ph∆∞∆°ng ƒë∆∞·ª£c ch·∫ø bi·∫øn t·ª´ nh·ªØng nguy√™n li·ªáu t∆∞∆°i ngon nh·∫•t.`,
          photos: ['https://images.unsplash.com/photo-1504754524776-8f4f37790ca0?w=800&h=600&fit=crop'],
          position: 1
        },
        {
          packageId: package1.id,
          title: 'Tr·∫£i nghi·ªám n·ªïi b·∫≠t',
          content: `T·∫Øm bi·ªÉn t·∫°i nh·ªØng b√£i bi·ªÉn ƒë·∫πp nh·∫•t, ch√®o kayak kh√°m ph√° v·ªãnh, ng·∫Øm ho√†ng h√¥n l√£ng m·∫°n, kh√°m ph√° ch·ª£ ƒë√™m s√¥i ƒë·ªông v√† nhi·ªÅu ho·∫°t ƒë·ªông th√∫ v·ªã kh√°c.`,
          photos: ['https://images.unsplash.com/photo-1507525428034-b723cf961d3e?w=800&h=600&fit=crop'],
          position: 2
        }
      ]
    })

    // Create stops with rich content
    await prisma.tourPackageStop.createMany({
      data: [
        {
          packageId: package1.id,
          title: 'B√£i bi·ªÉn ch√≠nh',
          description: 'B√£i bi·ªÉn ƒë·∫πp v·ªõi c√°t tr·∫Øng m·ªãn, n∆∞·ªõc bi·ªÉn trong xanh, l√Ω t∆∞·ªüng cho vi·ªác t·∫Øm bi·ªÉn v√† th∆∞ gi√£n.',
          guide: 'N√™n t·∫Øm bi·ªÉn v√†o s√°ng s·ªõm ho·∫∑c chi·ªÅu mu·ªôn ƒë·ªÉ tr√°nh n·∫Øng g·∫Øt',
          address: 'B√£i bi·ªÉn ch√≠nh, ' + dest.city,
          latitude: 21.0285,
          longitude: 105.8542,
          photos: ['https://images.unsplash.com/photo-1507525428034-b723cf961d3e?w=800&h=600&fit=crop'],
          tips: ['Mang theo kem ch·ªëng n·∫Øng', 'Chu·∫©n b·ªã ƒë·ªì t·∫Øm', 'Kh√¥ng b∆°i qu√° xa b·ªù'],
          bestTime: 'S√°ng s·ªõm ho·∫∑c chi·ªÅu mu·ªôn',
          mapThumb: 'https://images.unsplash.com/photo-1524661135-423995f22d0b?w=200&h=200&fit=crop',
          position: 1
        },
        {
          packageId: package1.id,
          title: 'Ch·ª£ ƒë√™m',
          description: 'Ch·ª£ ƒë√™m s√¥i ƒë·ªông v·ªõi nhi·ªÅu m√≥n ƒÉn ƒë∆∞·ªùng ph·ªë, ƒë·ªì l∆∞u ni·ªám v√† kh√¥ng kh√≠ vui nh·ªôn.',
          guide: 'N√™n ƒëi v√†o bu·ªïi t·ªëi t·ª´ 18:00-22:00 ƒë·ªÉ c√≥ tr·∫£i nghi·ªám t·ªët nh·∫•t',
          address: 'Ch·ª£ ƒë√™m, ' + dest.city,
          latitude: 21.0285,
          longitude: 105.8542,
          photos: ['https://images.unsplash.com/photo-1503220317375-aaad61436b1b?w=800&h=600&fit=crop'],
          tips: ['M·∫∑c c·∫£ khi mua ƒë·ªì', 'Th·ª≠ c√°c m√≥n ƒÉn ƒë·ªãa ph∆∞∆°ng', 'Mang ti·ªÅn m·∫∑t'],
          bestTime: 'Bu·ªïi t·ªëi 18:00-22:00',
          mapThumb: 'https://images.unsplash.com/photo-1524661135-423995f22d0b?w=200&h=200&fit=crop',
          position: 2
        }
      ]
    })
  }

     // ================== ACTIVITIES ==================
  const activitiesData = [
    { title: 'L·∫∑n ng·∫Øm san h√¥', category: 'Bi·ªÉn', image: 'https://images.unsplash.com/photo-1507525428034-b723cf961d3e?w=800&h=600&fit=crop' },
    { title: 'ƒêi thuy·ªÅn kayak', category: 'Bi·ªÉn', image: 'https://images.unsplash.com/photo-1526483360412-f4dbaf036963?w=800&h=600&fit=crop' },
    { title: 'Trekking Fansipan', category: 'Leo n√∫i', image: 'https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?w=800&h=600&fit=crop' },
    { title: 'Kh√°m ph√° ph·ªë c·ªï', category: 'VƒÉn h√≥a', image: 'https://images.unsplash.com/photo-1549887534-3db1bd59dcca?w=800&h=600&fit=crop' },
    { title: 'Ch√®o SUP', category: 'Th·ªÉ thao n∆∞·ªõc', image: 'https://images.unsplash.com/photo-1470770841072-f978cf4d019e?w=800&h=600&fit=crop' },
    { title: 'Tour ·∫©m th·ª±c ƒë∆∞·ªùng ph·ªë', category: '·∫®m th·ª±c', image: 'https://images.unsplash.com/photo-1504754524776-8f4f37790ca0?w=800&h=600&fit=crop' },
    { title: 'Kh√°m ph√° hang ƒë·ªông', category: 'Phi√™u l∆∞u', image: 'https://images.unsplash.com/photo-1526481280691-19585f32e7f7?w=800&h=600&fit=crop' },
    { title: 'Ng·∫Øm b√¨nh minh bi·ªÉn', category: 'Relax', image: 'https://images.unsplash.com/photo-1507525428034-b723cf961d3e?w=800&h=600&fit=crop' },
    { title: 'C·∫Øm tr·∫°i tr√™n ƒë·ªìi', category: 'Camping', image: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?w=800&h=600&fit=crop' },
    { title: 'Kh√°m ph√° ch·ª£ n·ªïi', category: 'VƒÉn h√≥a', image: 'https://images.unsplash.com/photo-1503220317375-aaad61436b1b?w=800&h=600&fit=crop' },
  ]

  for (const activity of activitiesData) {
    await prisma.activity.create({
      data: {
        title: activity.title,
        subtitle: `${activity.title} - Tr·∫£i nghi·ªám tuy·ªát v·ªùi`,
        image: activity.image,
        category: activity.category,
        difficulty: 'Trung b√¨nh',
        ageRequirement: '12+',
        schedule: 'H√†ng ng√†y',
        bestTime: 'Quanh nƒÉm',
        location: 'Vi·ªát Nam',
        price: Math.floor(200000 + Math.random() * 500000),
        originalPrice: Math.floor(500000 + Math.random() * 800000),
        discount: '10%',
        duration: `${1 + Math.floor(Math.random() * 3)} gi·ªù`,
        groupSize: '1-10 ng∆∞·ªùi',
        rating: Math.round((3.5 + Math.random() * 1.5) * 10) / 10,
        reviewCount: Math.floor(50 + Math.random() * 300),
      }
    })
  }

  // ================== INSURANCE ==================
  const insuranceData = [
    {
      name: 'B·∫£o hi·ªÉm c∆° b·∫£n',
      coverage: 'Tai n·∫°n, y t·∫ø c∆° b·∫£n',
      price: 200000,
      provider: 'BaoViet',
      image: 'https://images.unsplash.com/photo-1588776814546-ec6f89d9cf1d?w=800&h=600&fit=crop'
    },
    {
      name: 'B·∫£o hi·ªÉm n√¢ng cao',
      coverage: 'Tai n·∫°n, y t·∫ø, h√†nh l√Ω',
      price: 500000,
      provider: 'AIA',
      image: 'https://images.unsplash.com/photo-1521791136064-7986c2920216?w=800&h=600&fit=crop'
    },
    {
      name: 'B·∫£o hi·ªÉm VIP',
      coverage: 'To√†n di·ªán: tai n·∫°n, y t·∫ø, h√†nh l√Ω, ho√£n chuy·∫øn',
      price: 1000000,
      provider: 'Prudential',
      image: 'https://images.unsplash.com/photo-1549921296-3a6b5a0c2c8d?w=800&h=600&fit=crop'
    },
  ]

  for (const ins of insuranceData) {
    await prisma.insurance.create({
      data: {
        title: ins.name,
        subtitle: ins.coverage,
        image: ins.image,
        type: ins.provider,
        price: ins.price,
        duration: '1-30 ng√†y',
        coverage: ins.coverage,
        rating: 4.5,
        reviewCount: 0,
        claimProcess: 'X·ª≠ l√Ω trong 7-14 ng√†y',
        maxAge: 75,
        preExistingConditions: false
      }
    })
  }

  // ================== USERS ==================
  const usersData = [
    { name: 'Nguyen Van A', email: 'a@example.com', password: '123456', avatar: 'https://randomuser.me/api/portraits/men/32.jpg' },
    { name: 'Tran Thi B', email: 'b@example.com', password: '123456', avatar: 'https://randomuser.me/api/portraits/women/44.jpg' },
    { name: 'Le Van C', email: 'c@example.com', password: '123456', avatar: 'https://randomuser.me/api/portraits/men/65.jpg' },
    { name: 'Pham Thi D', email: 'd@example.com', password: '123456', avatar: 'https://randomuser.me/api/portraits/women/12.jpg' },
    { name: 'Hoang Van E', email: 'e@example.com', password: '123456', avatar: 'https://randomuser.me/api/portraits/men/78.jpg' },
  ]

  for (const user of usersData) {
    await prisma.user.create({ data: user })
  }

  console.log('‚úÖ Seeding completed successfully!')
}

main()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })